/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package web.action.base;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import common.entity.Trole;
import common.entity.TuserRole;

import app.common.web.ToJson;
import app.entity.Tempolyee;
import app.web.struts.action.BaseAction;
import web.form.base.RightsForm;


/** 
 * 权限管理
 * MyEclipse Struts
 * Creation date: 06-05-2009
 * XDoclet definition:
 * @struts.action path="/rights" name="rightsForm" input="/form/rights.jsp" parameter="actionType" scope="request" validate="true"
 */
public class RightsAction extends BaseAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * 得到所有角色
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward rightsManager(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		//得到所有角色
		List<Trole> allRoles=this.getRoleBiz().getAll();
		request.setAttribute("allRoles", allRoles);
		
		return mapping.findForward("EmpRightManager");
	}
	
	
	public ActionForward rightsManagerByType(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		//得到所有角色
		String type = request.getParameter("type");
		String plant = request.getParameter("plant");
		//List<Trole> allRoles=this.getRoleBiz().doSelectByCondition(type);


		List<TuserRole> allRoles = this.getUserRoleBiz().doSelectByCondition(type,plant,1);
		Map<String,List<Tempolyee>> rs = new HashMap<String,List<Tempolyee>>();
		for(TuserRole ur :allRoles){
			String key = ur.getTrole().getRoleName();
			System.out.print(ur.getId()+":");
			System.out.println(ur.getTempolyee().getUid()+":"+"=="+ur.getTempolyee().getName());
			//+ur.getTempolyee().getUid()+"=="+ur.getTempolyee().getName());
			if(rs.get(key)!=null){
				rs.get(key).add(ur.getTempolyee());
			}else{
				List<Tempolyee> list = new ArrayList<Tempolyee>();
				list.add(ur.getTempolyee());
				rs.put(key, list);
			}
			
		}
		request.setAttribute("allRoles", rs);
		return new ActionForward("/admin/role/totalRoles.jsp");
		//return mapping.findForward("EmpRightManager");
	}
	
	/** 
	 * 得到用户角色矩阵
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward doSelectUserAndRights(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String uid = request.getParameter("uid");
		String typeName = request.getParameter("typeName");
		if(uid!=null&&!uid.equals("")){
			List<Trole> allRoles=this.getRoleManager().doSelectRightsRet(uid,typeName);
			ToJson.listToJsonArrart(allRoles, response);
		}	
		return null;
		//request.setAttribute("allRoles", allRoles);	
		//return mapping.findForward("EmpRightManager");
	}
	
	/** 
	 * 變更用戶權限
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward doChangeUserRights(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String uid = request.getParameter("uid");
		String roleid = request.getParameter("roleid");
		boolean isOwn = Boolean.parseBoolean(request.getParameter("isOwn"));		
		this.getRoleManager().doChangeUserRole(isOwn,new TuserRole(new Trole(roleid),new Tempolyee(uid)));
		return null;
		//request.setAttribute("allRoles", allRoles);	
		//return mapping.findForward("EmpRightManager");
	}
	
	
	/**
	 * 添加权限
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */	
	public ActionForward addRights(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		String empUid=request.getParameter("empUid");
		String[] roles=request.getParameterValues("roles");
		Tempolyee emp=new Tempolyee(empUid);
		List<TuserRole> items=new ArrayList<TuserRole>();
		for(int i=0;i<roles.length;i++)
		{
			TuserRole ur=new TuserRole(new Trole(roles[i]),emp);
			items.add(ur);
		}
		this.getUserRoleBiz().addRightsExpectOld(items, empUid);
		
		return mapping.findForward("showRights");
	}
}