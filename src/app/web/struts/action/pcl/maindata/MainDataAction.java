/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package app.web.struts.action.pcl.maindata;

import java.util.Date;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.upload.FormFile;

import common.util.download.UploadFile;

import app.entity.Tuser;
import sdaac.wym.app.Service.PCL.MainData.ApproveForm;
import sdaac.wym.app.Service.PCL.MainData.BaseForm;
import sdaac.wym.app.Service.PCL.MainData.MDForm;
import sdaac.wym.app.Service.PCL.MainData.MDStateManager;


/** 
 * 处理实验室申请单的action类
 * Creation date: 06-10-2011
 * XDoclet definition:
 * @struts.action parameter="actionType" validate="true"
 */
public class MainDataAction extends PCLBaseAction {
	/*
	 * Generated Methods
	 */
	private Tuser user;
	/** 
	 * 申请
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward doApply(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		MainDataForm item = (MainDataForm)form;	
		user =(Tuser) request.getSession().getAttribute("logineduser");
		String isSave = request.getParameter("isSave");
		//申请单类型
		MDForm md = item.getForm();
		md.setTempolyeeByApplicantId(user.getEmp());
		
		//上传文件
		FormFile file1 = item.getFormFile();//取得上传的文件
		FormFile file2 = item.getFile2();//取得上传的文件
		FormFile file3 = item.getFile3();//取得上传的文件
		String filePath ="//filesrv/Department/Public/Indirect Material/IMM/";// request.getRealPath("/uploadFolder");//上传到指定的upload包中
		
		UploadFile uf = new UploadFile();
		if(file1 != null){
			md.setFile1(uf.uFileIdentify(file1, filePath, md.getTempolyeeByApplicantId().getName()));
		}
		if(file2 != null){
			md.setFile2(uf.uFileIdentify(file2, filePath, md.getTempolyeeByApplicantId().getName()));
		}
		if(file3 != null) {
			md.setFile3(uf.uFileIdentify(file3, filePath , md.getTempolyeeByApplicantId().getName()));
		}
		if(isSave!=null && isSave.equals("1")) {
			md.setIsSave(1);
		}
		if(isSave!=null && isSave.equals("2")) {
			md.setIsSave(2);
		}
		this.getManager().doApply(md);
		return mapping.findForward("Form");
	}
	
	/**
	 * 查询我的申请单
	 * @return
	 */
	public ActionForward doShowSelf(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		user =(Tuser) request.getSession().getAttribute("logineduser");
		MainDataForm item = (MainDataForm)form;	
		MDForm md = item.getForm();
//		md.setApplicantor(user.getEmp());
		
		request.setAttribute("rs",this.getManager().doShow(md) );
		return mapping.findForward("showList");		
	}

	/**
	 * 查询申请单by id
	 * @return
	 */
	public ActionForward doShowDetails(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String id = request.getParameter("id");
		String isTip = request.getParameter("isTip");
		String url=null;
		String destination=null;
		Integer pk;
		MDForm item = null;
		user =(Tuser) request.getSession().getAttribute("logineduser");
		request.setAttribute("types", MDForm.types);
		if(id!=null && !id.equals("")) {
			pk = Integer.parseInt(id);	
			item = (MDForm)this.getManager().doShowDetails(pk);
			request.setAttribute("rs",item);

			//个人状态
			if(item.getState()==MDStateManager.SELF) {
				destination ="details";
			}
			//需要解释
			else if(item.getNeedExplain()==BaseForm.NEEDEXPLAIN && item.getTempolyeeByApplicantId().getUid().equals(user.getEmp().getUid())) {
				url="";
				destination = "updateDetails";				
			}else{ 
				if(item.getTempolyeeByApplicantId().getUid().equals(user.getEmp().getUid())) {
					if(item.getState()==MDStateManager.DM && user.getEmp().getRoleids_b().contains("PRPM")){
						url= MDStateManager.getApproveURL(item.getState());
					}
				}else {
					url= MDStateManager.getApproveURL(item.getState());
				}
				destination ="showDetails";

			}
		}
		if(isTip!=null && !isTip.equals("")) {
			destination = "showDetailsTip";
		}
		request.setAttribute("url", url);
		request.setAttribute("id", id);
		return mapping.findForward(destination);
	}
	
	/**
	 * 审批
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward doApprove(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		MainDataForm mdForm = (MainDataForm)form;		
		ApproveForm apForm = mdForm.getApForm();
		apForm.setItem(mdForm.getForm());
		user =(Tuser) request.getSession().getAttribute("logineduser");
		apForm.setDatetime(new Date());
		apForm.setTempolyee(user.getEmp());
		this.getApproveManager().doApprove(apForm);
		return mapping.findForward("success");
	}
	
	public ActionForward doDelete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		Integer id = Integer.parseInt(request.getParameter("id"));
		this.getManager().doCancelById(id);
		return mapping.findForward("success");
	}
	
	public ActionForward doUpdate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		MainDataForm item = (MainDataForm)form;	
		ApproveForm apForm = item.getApForm();
		user =(Tuser) request.getSession().getAttribute("logineduser");
		apForm.setTempolyee(user.getEmp());
		item.getForm().setNeedExplain(0);
		this.getManager().doUpdate(item.getForm());
		this.getApproveManager().doJustSave(apForm);
		return mapping.findForward("success");
	}
	 
	public ActionForward doApplyReady(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){

		request.setAttribute("types", MDForm.types);
		ActionForward af = new ActionForward();
		af.setPath("/PCL/MainData/Form.jsp");
		return af;
	}
}