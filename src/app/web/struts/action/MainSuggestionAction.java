/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package app.web.struts.action;

import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import app.entity.TmainSuggestion;
import app.entity.TotherSuggestion;
import app.entity.Tproposal;
import app.web.struts.form.MainSuggestionForm;

/** 
 * MyEclipse Struts
 * Creation date: 02-26-2009
 * 
 * XDoclet definition:
 * @struts.action path="/mainSuggestion" name="mainSuggestionForm" input="/form/mainSuggestion.jsp" parameter="actionType" scope="request" validate="true"
 */
public class MainSuggestionAction extends BaseAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward departmentApproval(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		MainSuggestionForm mainSuggestionForm = (MainSuggestionForm) form;// TODO Auto-generated method stub
		TmainSuggestion mainSug= mainSuggestionForm.getMainsug();
		String[] dd=request.getParameterValues("mainsug.implementationPartment");
		String context="";
		for(int i=0;i<dd.length;i++)
		{
			context+=dd[i];
		}
		mainSug.setImplementationPartment(context);
		mainSug.setSuggestionDate(new Date());
		this.getMainSugBiz().doInsert(mainSug);
		Tproposal tp= mainSug.getTproposal();
		
		
		
		if(mainSug.getSuggestionType().equals("推荐实施"))
		{
			tp.setState(2);
			String []departmentID=context.split(",");
			
			this.getOtherSugBiz().deleteOtherSugByProposalId(mainSug.getTproposal().getId());
			for(int i=0;i<departmentID.length;i++)
			{
				TotherSuggestion otherSug=new TotherSuggestion();
				otherSug.setTproposal(mainSug.getTproposal());
				otherSug.setDepartmentId(Integer.parseInt(departmentID[i]));
				otherSug.setTmainSuggestion(mainSug);
				
				this.getOtherSugBiz().doInsert(otherSug);
				this.doInsertProposalState(tp,Integer.parseInt(departmentID[i]));
			}			
		}
		if(mainSug.getSuggestionType().equals("需完善")||mainSug.getSuggestionType().equals("不予推荐"))
		{			
			tp.setState(Tproposal.SELF);
			this.doUpdateProposalState(tp);
		}	
		if(mainSug.getSuggestionType().equals("合理化建议"))
		{
			tp.setState(Tproposal.RETIONAL);
			this.doUpdateProposalState(tp);
		}
		this.getProposalBiz().doUpdateState(tp);
		String expectSaving=request.getParameter("expectSaving");
		if(expectSaving!=null&&!expectSaving.equals(""))
		{
			this.doInsertSchedule(request, response, tp.getId());
		}		
		return mapping.findForward("doSearchSelfDepartment");
	}
}