/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package app.web.struts.action;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.upload.FormFile;

import common.util.CopyOfExcelReader;
import common.util.ExcelReader;
import common.util.FileUpload;
import app.entity.vave.VaveInfo;
import app.entity.vave.VaveInfoId;
import app.web.struts.form.VaveInfoForm;

/** 
 * MyEclipse Struts
 * Creation date: 05-05-2009
 * 
 * XDoclet definition:
 * @struts.action path="/vaveInfo" name="vaveInfoForm" input="/form/vaveInfo.jsp" parameter="actionType" scope="request" validate="true"
 */
public class VaveInfoAction extends BaseAction {
	/*
	 * Generated Methods
	 */

	/** 
	 *查询所有销售计划
	 */
	public ActionForward doSelectAll(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		List<VaveInfo> vaveInfos=this.getVaveInfoBiz().doSelectAll();
		request.setAttribute("vaveInfos",vaveInfos);
		return mapping.findForward("showAll");
	}
	/**
	 * 上传插入
	 */
	public ActionForward doAddbyExcel(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		response.setCharacterEncoding("utf-8");
		VaveInfoForm vaveInfoForm =(VaveInfoForm)form;
		FormFile file = vaveInfoForm.getFormFile();//取得上传的文件
		String filePath = request.getRealPath("/uploadFolder");//上传到指定的upload包中
		String fileName=FileUpload.upLoad(file, filePath);
		PrintWriter out=null;
		try {
			out = response.getWriter();
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		try {
			ExcelReader excelReader=new ExcelReader(fileName);
			 List<Object[]> results=excelReader.getList();
			 List<VaveInfo> vaveInfos=new ArrayList<VaveInfo>();
			 for (Object[] objects : results) {
				VaveInfo item=new VaveInfo();
				item.setId(new VaveInfoId(objects[0].toString(),objects[1].toString(),Long.parseLong(objects[2].toString())));
				vaveInfos.add(item);
			}
		
		} catch (Exception e) {
			// TODO Auto-generated catch block
			//e.printStackTrace();
			
		 	out.println("<script language=javascript>");
		    out.println("alert('上传失败！')");
		    out.println("</script>");
		    return null;
		}
		
		return mapping.findForward("showAll");
	}
}