/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package app.web.struts.action;

import java.util.List;
import java.util.Date;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import app.web.struts.form.OtherSuggestionForm;
import app.entity.TotherSuggestion;
import app.entity.Tproposal;
import app.entity.Tuser;
import app.entity.vave.VaveProposalStateId;

/** 
 * MyEclipse Struts
 * Creation date: 03-06-2009
 * 
 * XDoclet definition:
 * @struts.action path="/otherSuggestion" name="otherSuggestionForm" input="/form/otherSuggestion.jsp" parameter="actionType" scope="request" validate="true"
 */
public class OtherSuggestionAction extends BaseAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward doInsertSuggestion(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		OtherSuggestionForm otherSuggestionForm = (OtherSuggestionForm) form;// TODO Auto-generated method stub
		TotherSuggestion item=otherSuggestionForm.getItem();
		Tuser user=(Tuser)request.getSession().getAttribute("logineduser");
		item.setSuggestionDate(new Date());
		item.setDepartmentName(user.getEmp().getTdepartment().getName());
		item.setApproveName(user.getEmp().getName());
		//更新otherSug
		List<TotherSuggestion> rs=this.getOtherSugBiz().doSelectByConditions(item);
		if(rs!=null&&!rs.isEmpty())
		{
			this.getOtherSugBiz().doUpdate(item);
		}
		else
		{
			this.getOtherSugBiz().doInsert(item);
		}
		Tproposal tp= new Tproposal();		
		tp.setId(item.getTproposal().getId());
		boolean flag=true;
		tp.setState(Tproposal.COMPANY);
		rs=this.getOtherSugBiz().doSelectByConditions(item);
		for(TotherSuggestion otherSug:rs)
		{
			if(otherSug.getSuggestionType()==null||otherSug.getSuggestionType().equals(""))
			{
				flag=false;
				break;
			}
			if(!otherSug.getSuggestionType().equals("推荐实施"))
			{
				tp.setState(Tproposal.DEPARTMENT);
				//flag=false;
			}
			
		}
		/*
		 * 如果全部审批过了，才更新proposal。state
		 */
		if(flag)
		{
			if(tp.getState()==1)
			{
				this.doUpdateProposalState(tp);
				
				String implementDepartments=this.getMainSugBiz().doSelectByProposalID(tp.getId()).getImplementationPartment();
				String[] targets=implementDepartments.split(",");
				for(int i=0;i<targets.length;i++)
				{
					//String mamangerID=this.getDepartBiz().doSelectManagerByDepartID(Integer.parseInt(targets[i])).getPmangerid();
					String[] vaves=this.getDepartBiz().doSelectVaves(Integer.parseInt(targets[i]));
					for(int j=0;j<vaves.length;j++)
					{
						this.getProposalStateBiz().doDelete(new VaveProposalStateId(tp,vaves[j]));
					}
					
				}	
			}
			else
			{
				this.doInsertProposalState(tp,1);
			}
			this.getProposalBiz().doUpdateState(tp);
			
		}
		//更新计算附表
		String expectSaving=request.getParameter("expectSaving");
		if(expectSaving!=null&&!expectSaving.equals(""))
		{
			this.doInsertSchedule(request, response, tp.getId());
		}	
		return mapping.findForward("doSearchOutside");
	}
}