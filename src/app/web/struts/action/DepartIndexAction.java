/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package app.web.struts.action;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import common.util.ExcelReader;
import common.util.MyUtil;
import app.entity.TcompanyIndex;
import app.entity.Tdepartment;
import app.entity.TempIndex;
import app.entity.Tempolyee;
import app.entity.TindexTarget;
import app.web.struts.form.DepartIndexForm;

/** 
 *  部门指标管理
 */
public class DepartIndexAction extends BaseAction {
	

	/**
	 * 部门指标显示
	 */
	public ActionForward doManagerDepartmentIndex (ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		Integer departId=Integer.parseInt(request.getParameter("items.departID"));
		String departName=this.getDepartBiz().getDepart(departId).get(0).getName();
		String version=request.getParameter("version");
		List<TcompanyIndex> list=this.getDepartIndexBiz().doSelectCompanyIndex(departId,version);	
		List<TcompanyIndex> companyIndexs=new LinkedList<TcompanyIndex>();
		List<TcompanyIndex> departIndexs=new LinkedList<TcompanyIndex>();
		Float result1=0f;
		Float result2=0f;
		Float result=0f;
		for(TcompanyIndex elem:list)
		{
			if(elem.getTindexTarget().getDepartID()==1)
			{
				companyIndexs.add(elem);
				if(elem.getPercentage()!=null&&elem.getScore()!=null)
				result1+=elem.getPercentage()*elem.getScore()/10000;
			}
			else if(elem.getTindexTarget().getDepartID()==2)
			{
				departIndexs.add(elem);
				if(elem.getPercentage()!=null&&elem.getScore()!=null)
				result2+=elem.getPercentage()*elem.getScore()/10000;
			}
		}
		if(result2==0)
		{
			result=result1;
		}else{
			result=result1*result2;
		}
		if(departIndexs!=null&&!departIndexs.isEmpty())
		{
			version=departIndexs.get(0).getTindexTarget().getVersion();
		}else if(companyIndexs!=null&&!companyIndexs.isEmpty())
		{
			version=companyIndexs.get(0).getTindexTarget().getVersion();
		}
		
		request.setAttribute("version", version);
		//result1+"*"+result2+"="+new DecimalFormat("#.00000").format(result);	
		request.setAttribute("result", new DecimalFormat("#.00000").format(result1)+"*"+new DecimalFormat("#.00000").format(result2)+"="+new DecimalFormat("#.00000").format(result));
		request.setAttribute("companyIndexs", companyIndexs);
		request.setAttribute("departIndexs", departIndexs);
		request.setAttribute("departName",departName);
		request.setAttribute("departId", departId);
		if(request.getParameter("show")!=null)
		{
			return mapping.findForward("DepartmentIndexShow");
		}
		else{
			return mapping.findForward("DepartmentIndexAdd");
		}
	}
	/**
	 * 把部门经理的指标值copy给下面的员工
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward copyToEmployees (ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		int departmentId=Integer.parseInt(request.getParameter("departmentId"));
		String version=request.getParameter("version");
		List<TcompanyIndex> list=this.getDepartIndexBiz().doSelectDepartmentIndex(departmentId,version);
		this.getEmpIndexBiz().doCopy(list);
		return null;
	}
	/**
	 * 把员工的指标值copy给下面的员工
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws IOException 
	 */
	public ActionForward EmployeecopyToEmployees (ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)  {
		int empIndexId=Integer.parseInt(request.getParameter("empIndexId"));
		String[] uids=request.getParameterValues("itemselector");
		TempIndex empIndex= this.getEmpIndexBiz().doSelectByPk(empIndexId);
		TcompanyIndex ci=TcompanyIndex.toTcompanyIndex(empIndex);
		List<TcompanyIndex> list=new ArrayList<TcompanyIndex>();
		list.add(ci);
		this.getEmpIndexBiz().doCopyByCondition(list,uids);
//		PrintWriter out = response.getWriter();
//		out.println("<script language=javascript>");
//		out.println("alert('time out! please login again!')");
//		out.println("</script>");
//		out.println("<html><head></head>");
//		out.println("<Script LANGUAGE='javascript'> window.location.href='/bpp/welcome/Login.jsp';</script>");
//		out.println("</head>");
//		out.println("<body>");
//		out.println("<h1>please login first</h1>");
//		out.println("</body></html>");
		return null;
	}
	/**
	 * 部门指标添加及更新
	 */
	public ActionForward doAddDepartmentIndex (ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		DepartIndexForm dpIndexForm=(DepartIndexForm)form;
		List<TcompanyIndex> dpIndexs= dpIndexForm.getItems();
		Integer[] departIDs=MyUtil.toTransFormInteger(request.getParameterValues("fdpIndex"));//get department indexs for update
		Float[] weights=MyUtil.toTransFormFloat(request.getParameterValues("fpercentage"));
		Float[] outputs=MyUtil.toTransFormFloat(request.getParameterValues("fact_output"));
		Float[] scores=MyUtil.toTransFormFloat(request.getParameterValues("score"));
		String[] isChoices=request.getParameterValues("ischoice");
		Integer[] indexIDs=MyUtil.toTransFormInteger(request.getParameterValues("indexID"));
		String version=request.getParameter("version");
		Integer departID=Integer.parseInt(request.getParameter("departID"));
		List<TcompanyIndex> indexUpdates=new ArrayList<TcompanyIndex>();//wait for update their weight,output and score
		if(departIDs!=null)
		{
			for(int i=0;i<departIDs.length;i++)
			{
				if(weights[i]==0&&outputs[i]==0)
				{
					continue;
				}
				else
				{
					TcompanyIndex elem=new TcompanyIndex();
					elem.setId(departIDs[i]);
					elem.setPercentage(weights[i]);
					elem.setAct_output(outputs[i]);
					elem.setScore(scores[i]);
					elem.setTindexTarget(new TindexTarget(indexIDs[i]));
					elem.getTindexTarget().setIsChoice(isChoices[i]);
					elem.setTdepartment(new Tdepartment(departID));
					indexUpdates.add(elem);
				}
			}
		}
		
	
		this.getDepartIndexBiz().addnUpdate(dpIndexs,departID, indexUpdates,version);
		return mapping.findForward("AddDepartIndex");
	}
	
	/**
	 *  choice the department
	 */
	
	public ActionForward doSelectDepartmentDetails2 (ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		List<Tdepartment> departlist=this.getDepartBiz().getAll();
		//add ShenYang filter
		request.setAttribute("departlist",departlist);
		return mapping.findForward("selectDepart");
	}
	
	//部门指标导入
	public ActionForward ss2 (ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException, Exception {
		String filename = "E:\\kpi\\10080.xls";;
		String version = "2013-12";
		int departmentId = 10080 ;

		ExcelReader excelReader=new ExcelReader(filename);
		List<Object[]> results=excelReader.getList();
		List<TcompanyIndex> dpIndexs= new ArrayList<TcompanyIndex>();
		List<TcompanyIndex> indexUpdates= new ArrayList<TcompanyIndex>();
		 for (Object[] objects : results) {

			 TcompanyIndex item=new TcompanyIndex();
			//new index
			 TindexTarget index=new TindexTarget();
			 index.setA(objects[2].toString());
			 index.setB(objects[3].toString());
			 index.setC(objects[4].toString());
			 index.setName(objects[0].toString());
			 index.setFormula(objects[5].toString());
			 index.setDepartID(2);
			 index.setIsChoice("必选");
			 index.setVersion(version);
			 index.setType("非量化指标");
//			 int departId = Integer.parseInt(objects[9].toString());		 
			 //new empIndex
			 item.setTindexTarget(index);

			 if(!objects[1].toString().equals(""))
			 {
				 item.setPercentage(Float.parseFloat(objects[1].toString())*100);
			 }
			 item.setTdepartment(new Tdepartment(Integer.parseInt(objects[6].toString())));
			 //add list
			 dpIndexs.add(item);
			 
		 }
		 
		
		 this.getDepartIndexBiz().addnUpdate(dpIndexs,departmentId, indexUpdates,version);
		
		return null;
	}
	
	
	public ActionForward doSelectDepartmentDetails(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		List<Tdepartment> departlist=this.getDepartBiz().getAll();
		//add ShenYang filter
		request.setAttribute("departlist",departlist);		
		return new ActionForward("/admin/dprt/dprt.jsp");
	}
}