package app.entity;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import app.entity.vave.Schedule;
import app.entity.vave.VaveCompanySuggestion;
import app.entity.vave.VaveProposalMore;
import app.entity.vave.VaveProposalState;
import app.entity.vave.VaveSupply;
import app.entity.vave.VaveTeamWork;

import common.util.MyUtil;

/**
 * Tproposal generated by MyEclipse Persistence Tools
 */

public class Tproposal implements java.io.Serializable {

	// Fields=
	public static final Integer DELETE=-1;
	public static final Integer SELF=0;
	public static final Integer DEPARTMENT=1;
	public static final Integer OTHER_DEPARTMENT=2;
	public static final Integer COMPANY=3;
	public static final Integer BEGIN_PROJECT=4;
	public static final Integer TERMINA_PROJECT=5;
	public static final Integer DO_PROJECT=6;
	public static final Integer FINISH_PROJECT=7;
	public static final Integer RETIONAL=8;
	public static final Integer WAITCHANGE=9;
	
	public String lastApproveDate="";
	private String shareValue;//sdaac分享值
	
	private String annualConsumption;//年合计用量
	
	private String id;

	private String source;

	private Integer state;

	private Date lastModifyTime;

	private Integer version;

	private String suggestionType;

	private Tempolyee proposalPerson =new Tempolyee();

	private Tempolyee collectionPersion=new Tempolyee();
	
	private VaveSupply supply=new VaveSupply();
	
	private String supplyName;

	private Float exceptSaving;
	
	private Date expectFinishDate;
	
	private String remarks;//备注

	private String title;

	private String state_context;
	
	private String imvalue="";
	
	private String nvtype;
	
	private Integer isOpen;
	
	private Date _selectBeginTime;
	
	private Float pp;//单位节约成本
	
	private static String[] suggestion_Contexs={"设计更改,  ","材料更改,  ","零件通用,  ","工艺更改,  ","包装物流,  ","供应商变更,  ","其他"};

	private static String[] state_contexts={"个人审批","部门审批","外部门审批","公司审批","建立项目","终止项目","实施项目","完成项目","合理化建议","等待产品/成本切换","删除"};
	
	private Set<Ttheme> tthemes =new HashSet<Ttheme>();//= new HashSet(0);

	private String curProgram;
	
	private String ins_Program;
	
	private Set tmainSuggestions;// = new HashSet(0);
	
	private Set totherSuggestions;//=new HashSet(0);
	
	private Set<VaveTeamWork> vaveTeamWorks =new HashSet<VaveTeamWork>();//= new HashSet(0);
	
	private Set<VaveCompanySuggestion> vaveCompanySuggestions =new HashSet<VaveCompanySuggestion>(0);
	
	private Set vaveStatisticsSchedules;// = new HashSet(0);
	
	private Set vaveProjectSchedules ;//= new HashSet(0);
	
	private Set vaveProposalState=new HashSet(0);
	
	public VaveTeamWork vtw ;
	
	public String ApproveDate(){
		if(vaveCompanySuggestions==null||vaveCompanySuggestions.size()==0){
			return "";
		}else{
			Date temp=null;
			for(VaveCompanySuggestion item :vaveCompanySuggestions){
				if(item.getSuggestionType().equals("推荐实施")){
					if(temp==null){
						temp=item.getSuggestionDate();
					}else{
						if(temp.before(item.getSuggestionDate())){
							temp=item.getSuggestionDate();
						}
					}
				}
			}
			DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
			return df.format(temp);
		}
	}
	
	private Set<VaveProposalMore> proposalMore=new HashSet<VaveProposalMore>(0);;
	
	public List<Schedule> schedules; 
	public VaveProposalMore proposalMore2;
	
	private VaveProposalMore vm;//=new VaveProposalMore(); //得到Set<VaveProposalMore>的最新份
	// Constructors

	public Set<VaveProposalMore> getProposalMore() {
		return proposalMore;
	}

	public void setProposalMore(Set proposalMore) {
		this.proposalMore = proposalMore;
	}

	/** default constructor */
	public Tproposal() {
	}

	/** minimal constructor */
	public Tproposal(String id) {
		this.id = id;
	}

	/** full constructor */
	public Tproposal(String id, String source, Integer state,
			Date lastModifyTime, Integer version, String suggestionType,
	
			String title, Set tthemes, Set tmainSuggestions) {
		this.id = id;
		this.source = source;
		this.state = state;
		this.lastModifyTime = lastModifyTime;
		this.version = version;
		this.suggestionType = suggestionType;
	
		
		this.title = title;
		this.tthemes = tthemes;
		this.tmainSuggestions = tmainSuggestions;
	}

	// Property accessors

	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getSource() {
		return this.source;
	}

	public void setSource(String source) {
		this.source = source;
	}

	public Integer getState() {
		return this.state;
	}

	public void setState(Integer state) {
		this.state = state;
	}

	public Date getLastModifyTime() {
		return this.lastModifyTime;
	}

	public void setLastModifyTime(Date lastModifyTime) {
		this.lastModifyTime = lastModifyTime;
	}

	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}



	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public Set<Ttheme> getTthemes() {
		return this.tthemes;
	}

	public void setTthemes(Set tthemes) {
		this.tthemes = tthemes;
	}

	public Set getTmainSuggestions() {
		return this.tmainSuggestions;
	}

	public void setTmainSuggestions(Set tmainSuggestions) {
		this.tmainSuggestions = tmainSuggestions;
	}

	public static String[] getSuggestion_Contexs() {
		return suggestion_Contexs;
	}

	public Tempolyee getCollectionPersion() {
		return collectionPersion;
	}

	public void setCollectionPersion(Tempolyee collectionPersion) {
		this.collectionPersion = collectionPersion;
	}

	public Tempolyee getProposalPerson() {
		return proposalPerson;
	}

	public void setProposalPerson(Tempolyee proposalPerson) {
		this.proposalPerson = proposalPerson;
	}
	
	public String choiceSuggestionType(String type)
	{
		String choiceSuggestString="";
		if(type!=null&&!type.equals(""))
		{
			String[] types=type.split(",");
			for (int i = 0; i < types.length; i++) {
				choiceSuggestString+=suggestion_Contexs[Integer.parseInt(types[i])];
			}
		}	
		return choiceSuggestString;
	}

	public String getSuggestionType() {
		return suggestionType;
	}

	public void setSuggestionType(String suggestionType) {
		this.suggestionType = suggestionType;
	}

	public Set getTotherSuggestions() {
		return totherSuggestions;
	}

	public void setTotherSuggestions(Set totherSuggestions) {
		this.totherSuggestions = totherSuggestions;
	}

	public Set getVaveTeamWorks() {
		return vaveTeamWorks;
	}

	public void setVaveTeamWorks(Set vaveTeamWorks) {
		this.vaveTeamWorks = vaveTeamWorks;
	}

	public Set getVaveCompanySuggestions() {
		return vaveCompanySuggestions;
	}

	public void setVaveCompanySuggestions(Set vaveCompanySuggestions) {
		this.vaveCompanySuggestions = vaveCompanySuggestions;
	}

	public String getState_contexts(Integer state) {
		if(state<0){state=state_contexts.length-1;}
		return state_contexts[state];
	}

	public String getState_context() {
		return state_context;
	}

	public void setState_context(String state_context) {
		this.state_context = state_context;
	}

	public String getCurProgram() {
		return curProgram;
	}

	public void setCurProgram(String curProgram) {
		this.curProgram = curProgram;
	}

	public String getIns_Program() {
		return ins_Program;
	}

	public void setIns_Program(String ins_Program) {
		this.ins_Program = ins_Program;
	}

	public Set getVaveStatisticsSchedules() {
		return vaveStatisticsSchedules;
	}

	public void setVaveStatisticsSchedules(Set vaveStatisticsSchedules) {
		this.vaveStatisticsSchedules = vaveStatisticsSchedules;
	}

	public Set getVaveProjectSchedules() {
		return vaveProjectSchedules;
	}

	public void setVaveProjectSchedules(Set vaveProjectSchedules) {
		this.vaveProjectSchedules = vaveProjectSchedules;
	}



	public Set getVaveProposalState() {
		return vaveProposalState;
	}

	public void setVaveProposalState(Set vaveProposalState) {
		this.vaveProposalState = vaveProposalState;
	}

	public Integer getIsOpen() {
		return isOpen;
	}

	public void setIsOpen(Integer isOpen) {
		this.isOpen = isOpen;
	}

	public Date get_selectBeginTime() {
		return _selectBeginTime;
	}

	public void set_selectBeginTime(Date beginTime) {
		_selectBeginTime = beginTime;
	}

	public void set_selectBeginTimeString(String beginTimeString) {
		this._selectBeginTime=MyUtil.formatDate(beginTimeString);
	}
	
	public String get_selectBeginTimeString()
	{
		return null;
	}
	
	public VaveSupply getSupply() {
		return supply;
	}

	public void setSupply(VaveSupply supply) {
		this.supply = supply;
	}

	public String getRemarks() {
		return remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

	public Float getExceptSaving() {
		return exceptSaving;
	}

	public void setExceptSaving(Float exceptSaving) {
		this.exceptSaving = exceptSaving;
	}

	public Date getExpectFinishDate() {
		return expectFinishDate;
	}

	public void setExpectFinishDate(Date expectFinishDate) {
		this.expectFinishDate = expectFinishDate;
	}

	public Float getPp() {
		return pp;
	}

	public void setPp(Float pp) {
		this.pp = pp;
	}

	public static List<Tproposal> setMoreInfo(List<Tproposal> list,String uid)
	{	
		
		/**添加状态信息*/
		for(Tproposal proposal:list)
		{
			proposal.setState_context(proposal.getState_contexts(proposal.getState()));
			
			Object[] aa=proposal.getProposalMore().toArray();
			if(aa!=null&&aa.length>0)
			{	
				Set<VaveProposalMore> set1=proposal.getProposalMore();
				VaveProposalMore temp=new VaveProposalMore();
				for(VaveProposalMore more:set1)
				{
					if(temp.getVersion()==null||temp.getVersion().equals(""))
					{
						temp=more;
					}else{
						if(temp.getVersion()<more.getVersion())
						{
							temp=more;
						}
					}	
				}
				proposal.setExpectFinishDate(temp.getExpectFinishDate());
				proposal.setExceptSaving(temp.getExpectSaving());
				if(uid!=null&&!"".equals(uid))
				{
					if(proposal.getVaveProposalState()!=null&&!proposal.getVaveProposalState().isEmpty())
					{
						Set<VaveProposalState> set=proposal.getVaveProposalState();
						for(VaveProposalState state:set)
						{
							if(state.getId().getOwner().equals(uid))
							{
								proposal.setIsOpen(state.getIsOpen());
							}
						}
						
					}
				}
			}	
		}
		return list;
	}

	public String getShareValue() {
		return shareValue;
	}

	public void setShareValue(String shareValue) {
		this.shareValue = shareValue;
	}

	public String getAnnualConsumption() {
		return annualConsumption;
	}

	public void setAnnualConsumption(String annualConsumption) {
		this.annualConsumption = annualConsumption;
	}

	public VaveProposalMore getVm() {
		
		for(VaveProposalMore more:proposalMore)
		 {
			if(vm==null)
			{
				vm=more;
			}
			if(vm.getVersion()<more.getVersion())
			{
				vm=more;
			}
		 }
		
		return vm;
	}

	public void setVm(VaveProposalMore vm) {
		this.vm = vm;
	}

	public String getSupplyName() {
		if(supply==null){
			return "error";
		}else if(supply.getSimpleName().equals("1")){
			return "SDAAC";
		}else{
			return supply.getSimpleName();
		}
		
	}

	public String getImvalue() {
		return imvalue;
	}

	public void setImvalue(String imvalue) {
		this.imvalue = imvalue;
	}
	

	
	public void setImValue(String[] values) {
		for(String item : values) {
			this.imvalue+=item+",";
		}
	}
	
	private String[] ImValues;
	
	
	
	public String[] getImValues() {
		return this.imvalue.split(",");

	}

	public void setImValues(String[] imValues) {
		ImValues = imValues;
	}
	
	private String[] vv;

	public String[] getVv() {
		if(imvalue!=null){
			return this.imvalue.split(",");
		}else
			return new String[]{};
	}

	public void setVv(String[] vv) {
		this.vv = vv;
	}
	
	private String[] vvv;

	public String[] getVvv() {
		if(imvalue!=null){
			String[] temps = imvalue.split(",");
			List<String> rs = new ArrayList<String>(); 
			if(temps.length>6) {
				 for(int i = 6 ; i<temps.length; i++) {
					 rs.add(temps[i]);
				 }
			 }
			return rs.toArray(new String[0]);
		}else
			return new String[]{};
	}

	public void setVvv(String[] vvv) {
		this.vvv = vvv;
	}

	public String getNvtype() {
		return nvtype;
	}

	public void setNvtype(String nvtype) {
		this.nvtype = nvtype;
	}
	
	
}